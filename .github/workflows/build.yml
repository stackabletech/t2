name: Test, Build and Scan

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:

  test-build-scan:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Create report folder
        run: |
          mkdir -p report/

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run tests
        run: mvn -B test --file pom.xml

      - name: Package Java app
        run: mvn -B package --file pom.xml

      - name: Login to Stackable Docker registry
        run: |
          docker login --username github --password ${{ secrets.NEXUS_PASSWORD }} docker.stackable.tech

      - name: Build T2 image
        run: |
          docker build -t docker.stackable.tech/t2:${{ github.event.pull_request.head.sha }} .

      - name: Push T2 image
        run: |
          docker push docker.stackable.tech/t2:${{ github.event.pull_request.head.sha }}

      - name: Trivy - scan Dockerfile
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: config
          format: 'table'
          exit-code: '0'
          ignore-unfixed: false
          vuln-type: 'os,library'
          output: "report/trivy-report-dockerfile.txt"
          hide-progress: false

      - name: Trivy - scan image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.stackable.tech/t2:${{ github.event.pull_request.head.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: false
          vuln-type: 'os,library'
          output: "report/trivy-report.txt"
          ignore-policy: trivy.rego

      - id: get-trivy-report-dockerfile
        run: |
          report="$(cat report/trivy-report-dockerfile.txt)"
          report="${report//'%'/'%25'}"
          report="${report//$'\n'/'%0A'}"
          report="${report//$'\r'/'%0D'}" 
          echo "::set-output name=report::$report"

      - name: Create comment Dockerfile Scan
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.STACKY_MC_STACKFACE_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **Trivy scanned your Dockerfile**
            
            ```
            ${{ steps.get-trivy-report-dockerfile.outputs.report }}
            ```

      - id: get-trivy-report
        run: |
          report="$(cat report/trivy-report.txt)"
          report="${report//'%'/'%25'}"
          report="${report//$'\n'/'%0A'}"
          report="${report//$'\r'/'%0D'}" 
          echo "::set-output name=report::$report"

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.STACKY_MC_STACKFACE_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **Trivy scanned your Docker image**
            
            ```
            ${{ steps.get-trivy-report.outputs.report }}
            ```
  sign-with-cosign:
    runs-on: ubuntu-latest
    needs:
      - test-build-scan
    steps:
      - name: Login to Stackable Docker registry
        run: |
          docker login --username github --password ${{ secrets.NEXUS_PASSWORD }} docker.stackable.tech
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.6.0'
      - name: Sign image with a key
        run: |
          echo ${COSIGN_KEY} > /tmp/cosign.key && \
          cosign sign --key /tmp/cosign.key ${TAG}
        env:
          COSIGN_KEY: ${{secrets.COSIGN_KEY}}
          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
          TAG: docker.stackable.tech/t2:${{ github.event.pull_request.head.sha }}
