---
- name: Install operator (YUM)
  yum:
    name: "{{ stackable_package_versions[item.name] | default(item.name) }}"
    state: present
  loop: "{{ operators }}"
  notify: restart operators
  when: 
    - ansible_distribution == "CentOS"

- name: Install operator (APT)
  apt:
    name: "{{ stackable_package_versions[item.name] | default(item.name) }}"
    state: present
    force: yes
  loop: "{{ operators }}"
  notify: restart operators
  when: 
    - ansible_distribution == "Debian"

- name: Download source repos of the orchestrators and extract CRDs
  shell: |
    mkdir -p /tmp/crds/
    curl {{ item.repo_archive_url }} > /tmp/crds/{{ item.name }}.zip
    unzip /tmp/crds/{{ item.name }}.zip -d /tmp/crds/
  loop: "{{ operators }}"
  notify: restart operators

- name: Apply CRDs
  shell: "kubectl apply -f /tmp/crds/{{ item.crd_folder_in_archive }}/deploy/crd/"
  args:
    warn: no
  loop: "{{ operators }}"

- name: Copy script to collect versions to server
  copy:
    src: "collect-stackable-versions.sh"
    dest: "/tmp/collect-stackable-versions.sh"
    mode: 0700

- name: Collect version info into file on server
  shell: "/tmp/collect-stackable-versions.sh"

- name: Fetch version info file to Ansible localhost
  fetch: 
    src: "/tmp/stackable-versions.txt"
    dest: "temp/stackable-versions/{{ inventory_hostname }}.txt"
    flat: yes
