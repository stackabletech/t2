---
- name: Add Kubernetes repository
  yum_repository:
    name: Kubernetes
    description: Kubernetes YUM repo
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey: "https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"

- name: Ensure kubectl is installed
  yum:
    name: kubectl
    state: present

- name: Create directory for kubeconfig
  file:
    path: /root/.kube
    state: directory

- name: copy the kubeconfig to all nodes
  copy:
    src: "resources/kubeconfig"
    dest: "/root/.kube/config"

- name: Add Stackable repository
  yum_repository:
    name: stackable-{{item}}
    description: Stackable YUM repo {{item}}
    baseurl: https://repo.stackable.tech/repository/{{item}}/el7/
    gpgcheck: no
    repo_gpgcheck: no
  with_items: 
    - "rpm-dev"
    - "rpm-release"

- name: Ensure stackable agent is installed
  yum:
    name: stackable-agent-{{ stackable_versions['stackable-agent'] | default( stackable_default_versions['stackable-agent']) | default('*') }}.x86_64
    state: present
  when: stackable_agent | bool

- name: Start stackable agent
  systemd:
    name: stackable-agent
    state: started
    enabled: yes
    daemon_reload: yes
  when: stackable_agent | bool

- name: Copy script to collect versions to server
  copy:
    src: "collect-stackable-versions.sh"
    dest: "/tmp/collect-stackable-versions.sh"
    mode: 0700

- name: Collect version info into file on server
  shell: "/tmp/collect-stackable-versions.sh"

- name: Fetch version info file to Ansible localhost
  fetch: 
    src: "/tmp/stackable-versions.txt"
    dest: "temp/stackable-versions/{{ inventory_hostname }}.txt"
    flat: yes
