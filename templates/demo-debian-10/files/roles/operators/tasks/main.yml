---
- name: Install Zookeeper operator
  apt:
    name: stackable-zookeeper-operator-server
    state: present
  notify: restart zookeeper operator

- name: Install Spark operator
  apt:
    name: stackable-spark-operator-server
    state: present
  notify: restart spark operator

- name: Install Kafka operator
  apt:
    name: stackable-kafka-operator-server
    state: present
  notify: restart kafka operator

- name: Download Zookeeper CRD
  shell: "curl https://raw.githubusercontent.com/stackabletech/zookeeper-operator/main/crd/zookeepercluster.crd.yaml > /tmp/zookeeper.crd.yaml"
  notify: restart zookeeper operator

- name: Download Spark CRD
  shell: "curl https://raw.githubusercontent.com/stackabletech/spark-operator/main/crd/sparkcluster.crd.yaml > /tmp/spark.crd.yaml"
  notify: restart spark operator

- name: Download kafka CRD
  shell: "curl https://raw.githubusercontent.com/stackabletech/kafka-operator/main/crd/kafkaclusters.crd.yaml > /tmp/kafka.crd.yaml"
  notify: restart kafka operator

- name: Apply Zookeeper CRD to Kubernetes
  shell: "kubectl apply -f /tmp/zookeeper.crd.yaml"
  args:
    warn: no

- name: Apply Spark CRD to Kubernetes
  shell: "kubectl apply -f /tmp/spark.crd.yaml"
  args:
    warn: no

- name: Apply Kafka CRD to Kubernetes
  shell: "kubectl apply -f /tmp/kafka.crd.yaml"
  args:
    warn: no

- name: Copy script to collect versions to server
  copy:
    src: "collect-stackable-versions.sh"
    dest: "/tmp/collect-stackable-versions.sh"
    mode: 0700

- name: Collect version info into file on server
  shell: "/tmp/collect-stackable-versions.sh"

- name: Fetch version info file to Ansible localhost
  fetch: 
    src: "/tmp/stackable-versions.txt"
    dest: "temp/stackable-versions/{{ inventory_hostname }}.txt"
    flat: yes
