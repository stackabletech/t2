---
- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: Ensure system is up to date
  yum:
    name: "*"
    state: latest

- name: Ensure important and useful packages are installed
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - unzip
      - chrony
      - python3-libselinux
      - man
      - tmux
      - vim-enhanced
      - wget
      - java-11-openjdk-devel
      - gnupg
  
- name: Install AWS CLI
  shell: 
    cmd: |
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      sudo ./aws/install
      rm -rf aws/
    chdir: "/tmp"
  args:
    creates: /usr/local/bin/aws

- name: Log in with AWS keys (ec2-user)
  shell: 
    cmd: |
      aws configure set aws_access_key_id "{{aws_access_key}}"
      aws configure set aws_secret_access_key "{{aws_secret_access_key}}"
      aws configure set default.region eu-central-1
  vars:
    ansible_become: false      
      
- name: Log in with AWS keys (root user)
  shell: 
    cmd: |
      /usr/local/bin/aws configure set aws_access_key_id "{{aws_access_key}}"
      /usr/local/bin/aws configure set aws_secret_access_key "{{aws_secret_access_key}}"
      /usr/local/bin/aws configure set default.region eu-central-1

# The aws-iam-authenticator is usually referenced in the kubeconfig
# and the authentication against the K8s is done with the credentials
# managed by the AWS CLI tool (see previous tasks in this role)
- name: Install aws-iam-authenticator
  shell: 
    cmd: |
      curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
      install -o root -g root -m 0755 aws-iam-authenticator /usr/bin/aws-iam-authenticator && rm aws-iam-authenticator
  args:
    creates: /usr/bin/aws-iam-authenticator

- name: Install kubectl
  shell: 
    cmd: |
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && rm kubectl
  args:
    creates: /usr/local/bin/kubectl

- name: create directory for Stackable kubeconfig
  file:
    path: /opt/stackable
    state: directory

- name: Copy kubeconfig to the node
  copy:
    src: kubeconfig_{{cluster_name}}
    dest: /opt/stackable/kubeconfig
    mode: 0664

- name: Create directory for kubeconfig for root user
  file:
    path: /root/.kube/
    state: directory

- name: Copy kubeconfig for root user
  copy:
    src: /opt/stackable/kubeconfig
    dest: /root/.kube/config
    mode: 0660
    remote_src: yes
    
- name: Create directory for kubeconfig for ec2-user
  file:
    path: ~/.kube/
    state: directory
  vars:
    ansible_become: false      

- name: Copy kubeconfig for ec2-user
  copy:
    src: /opt/stackable/kubeconfig
    dest: ~/.kube/config
    mode: 0660
    remote_src: yes
  vars:
    ansible_become: false      

- name: Add Stackable repository
  yum_repository:
    name: stackable-{{item}}
    description: Stackable YUM repo {{item}}
    baseurl: https://repo.stackable.tech/repository/{{item}}/el8/
    gpgcheck: no
    repo_gpgcheck: no
  with_items: 
    - "rpm-dev"
    - "rpm-release"



