---
# TODO These files are included in this template which might cause
# a problem once the original definitions change
- name: Ensure Stackable repository is a known custom resource in K8s
  copy:
    src: "{{ item }}"
    dest: "/tmp/"
    owner: root
    group: root
    mode: 0400
  with_items: 
    - "stackable-repositories.crd.yml"
    - "stackablepublic-repo.yml"

- name: Apply Stackable CRDs (Stackable Repository CRD and Stackable Repository)
  shell: "/usr/local/bin/kubectl apply -f /tmp/{{ item }}"
  args:
    warn: no
  with_items: 
    - "stackable-repositories.crd.yml"
    - "stackablepublic-repo.yml"

- name: Install operator
  yum:
    name: "{{ item.name }}-{{ item.version }}"
    state: present
  loop: "{{ operators }}"
  notify: restart operators

- name: Create directory for drop-in file for operator service
  file:
    path: /lib/systemd/system/{{ item.name }}.service.d/
    state: directory
  loop: "{{ operators }}"

- name: Add drop-in file for operator service to run under stackable-user
  template:
    src: service-user.j2
    dest: /lib/systemd/system/{{ item.name }}.service.d/service-user.conf
  loop: "{{ operators }}"
  notify: restart operators

- name: Remove older CRD directory if present
  file:
    path: /tmp/crds/
    state: absent

- name: Create CRD directory
  file:
    path: /tmp/crds/
    state: directory

- name: Download source repos of the orchestrators and extract CRDs
  shell: |
    curl {{ item.repo_archive_url }} > /tmp/crds/{{ item.name }}.zip
    unzip /tmp/crds/{{ item.name }}.zip -d /tmp/crds/
  loop: "{{ operators }}"
  notify: restart operators

- name: Apply CRDs
  shell: "/usr/local/bin/kubectl apply -f /tmp/crds/{{ item.crd_folder_in_archive }}/deploy/crd/"
  args:
    warn: no
  loop: "{{ operators }}"
