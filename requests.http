# This file can be used with VS Code's REST Client Plugin (humao.rest-client)

# Use the "environments" feature to set variables: 
# https://github.com/Huachao/vscode-restclient#environments


# List all clusters
{{t2-protocol}}://{{t2-host}}{{t2-port}}/api/clusters
t2-token: {{t2-token}}

###

# broken UUID
{{t2-protocol}}://{{t2-host}}{{t2-port}}/api/clusters/this-is-no-uuid
t2-token: {{t2-token}}

###

# UUID (syntax OK)
{{t2-protocol}}://{{t2-host}}{{t2-port}}/api/clusters/a526a5e5-1f6d-4226-b467-3f7a8ec67464
t2-token: {{t2-token}}

###

# UUID exists (please paste existing UUID)
{{t2-protocol}}://{{t2-host}}{{t2-port}}/api/clusters/4fe50f34-aacd-4152-9904-21afeb8328a3
t2-token: {{t2-token}}

###

# get wireguard config
{{t2-protocol}}://{{t2-host}}{{t2-port}}/api/clusters/a2c376b7-9c32-415b-9b77-20feaa9a9813/wireguard-config/1
t2-token: {{t2-token}}


###

# get stackable Version information sheet
{{t2-protocol}}://{{t2-host}}{{t2-port}}/api/clusters/a2c376b7-9c32-415b-9b77-20feaa9a9813/stackable-versions
t2-token: {{t2-token}}

###

# get stackable client script
{{t2-protocol}}://{{t2-host}}{{t2-port}}/api/clusters/a2c376b7-9c32-415b-9b77-20feaa9a9813/stackable-client-script
t2-token: {{t2-token}}

###

# get logs
{{t2-protocol}}://{{t2-host}}{{t2-port}}/api/clusters/0ee9f135-5503-450f-940d-15d48591d3d4/log
t2-token: {{t2-token}}

###

# create new cluster (provided YAML)
POST {{t2-protocol}}://{{t2-host}}{{t2-port}}/api/clusters
t2-token: {{t2-token}}
Content-Type: application/yaml

---
apiVersion: t2.stackable.tech/v1
kind: Infra
template: demo-debian-10
metadata: 
  name: stackable-demo
  description: "test new structure"
domain: stackable.demo
publicKeys:
  - "{{t2-ssh-key}}"
spec:
  region: de/fra
  nodes:
    main:
      numberOfNodes: 1
      numberOfCores: 2
      memoryMb: 8192
      diskType: HDD 
      diskSizeGb: 15
    worker:
      numberOfNodes: 2
      numberOfCores: 4
      memoryMb: 8192
      diskType: HDD 
      diskSizeGb: 15

###

# create new cluster (provided YAML, AWS)
POST {{t2-protocol}}://{{t2-host}}{{t2-port}}/api/clusters
t2-token: {{t2-token}}
Content-Type: application/yaml

---
apiVersion: t2.stackable.tech/v1
kind: Infra
template: aws-centos-8
metadata: 
  name: stackable-demo
  description: "test new structure"
domain: stackable.demo
publicKeys:
  - "{{t2-ssh-key}}"
spec:
  region: eu-central-1
  nodes:
    main:
      numberOfNodes: 1
      numberOfCores: 2
      memoryMb: 8192
      diskType: HDD 
      diskSizeGb: 15
    worker:
      numberOfNodes: 2
      numberOfCores: 4
      memoryMb: 8192
      diskType: HDD 
      diskSizeGb: 15

###

services:
  spark-demo: |
    apiVersion: spark.stackable.tech/v1
    kind: SparkCluster
    metadata:
      name: spark-demo
    spec:
      master:
        selectors:
          - nodeName: "main-1.stackable.demo"
            instances: 1
            masterPort: 9999
            masterWebUiPort: 11111
      worker:
        selectors:
          - nodeName: "worker-1.stackable.demo"
            instances: 1
            cores: 1
            memory: "2g"
          - nodeName: "worker-2.stackable.demo"
            instances: 1
            cores: 1
            memory: "2g"
          - nodeName: "worker-3.stackable.demo"
            instances: 1
            cores: 1
            memory: "2g"
      version: "3.0.1"
      maxPortRetries: 0



###

# delete cluster
DELETE {{t2-protocol}}://{{t2-host}}{{t2-port}}/api/clusters/e7a50b8d-5e83-4541-8d59-8c69154c1b85
t2-token: {{t2-token}}


###

# get DIY cluster (provided YAML)
GET {{t2-protocol}}://{{t2-host}}{{t2-port}}/api/diy-cluster
Content-Type: application/yaml

---
apiVersion: t2.stackable.tech/v1
kind: Infra
template: demo-centos-7
metadata: 
  name: cli-demo-centos-7
  description: "demo centos8"
domain: stackable.demo
publicKeys:
  - "{{t2-ssh-key}}"
spec:
  region: de/fra
  nodes:
    main:
      numberOfNodes: 1
      numberOfCores: 2
      memoryMb: 8192
      diskType: HDD 
      diskSizeGb: 15
    worker:
      numberOfNodes: 1
      numberOfCores: 2
      memoryMb: 8192
      diskType: HDD 
      diskSizeGb: 15


###

# get DIY cluster AWS (provided YAML)
GET {{t2-protocol}}://{{t2-host}}{{t2-port}}/api/diy-cluster
Content-Type: application/yaml

---
apiVersion: t2.stackable.tech/v1
kind: Infra
template: aws-centos-8
metadata: 
  name: cli-aws-centos-8
  description: "demo centos8"
domain: stackable.demo
publicKeys:
  - "{{t2-ssh-key}}"
spec:
  region: eu-central-1
  nodes:
    main:
      numberOfNodes: 1
    worker:
      numberOfNodes: 1


###

services:
  spark-primary: |
    apiVersion: spark.stackable.tech/v1
    kind: SparkCluster
    metadata:
      name: spark-primary
    spec:
      master:
        selectors:
          - nodeName: "main-1.stackable.demo"
            instances: 1
            masterPort: 9999
            masterWebUiPort: 11111
      worker:
        selectors:
          - nodeName: "worker-1.stackable.demo"
            instances: 1
            cores: 1
            memory: "1g"
      historyServer:
        selectors:
          - nodeName: "worker-3.stackable.demo"
            instances: 1
      version: "3.0.1"
      maxPortRetries: 0
  spark-secondary: |
    apiVersion: spark.stackable.tech/v1
    kind: SparkCluster
    metadata:
      name: spark-secondary
    spec:
      master:
        selectors:
          - nodeName: "main-1.stackable.demo"
            instances: 1
            masterPort: 9998
            masterWebUiPort: 11112
      worker:
        selectors:
          - nodeName: "worker-2.stackable.demo"
            instances: 1
            cores: 1
            memory: "1g"
      historyServer:
        selectors:
          - nodeName: "worker-4.stackable.demo"
            instances: 1
      version: "3.0.1"
      maxPortRetries: 0        

###

# get DIY cluster (provided YAML, EC2)
GET {{t2-protocol}}://{{t2-host}}{{t2-port}}/api/diy-cluster
Content-Type: application/yaml

---
apiVersion: t2.stackable.tech/v1
kind: Infra
template: aws-centos-8
metadata: 
  name: stackable-aws-centos-8
  description: "demo centos8 on aws"
domain: stackable.demo
publicKeys:
  - "{{t2-ssh-key}}"
spec:
  region: eu-central-1
  nodes:
    main:
      numberOfNodes: 1
    worker:
      numberOfNodes: 1

###

# get DIY cluster (AWS EKS)
GET {{t2-protocol}}://{{t2-host}}{{t2-port}}/api/diy-cluster
Content-Type: application/yaml

---
apiVersion: t2.stackable.tech/v1
kind: Infra
template: aws-eks-demo
metadata: 
  name: stackable-eks-demo
